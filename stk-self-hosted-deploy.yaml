name: Stk Self Hosted Deploy

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - main
      - 'releases/**'
    # Sequence of patterns matched against refs/tags
    tags:        
      - v2
      - v1.*

# Avoid concurrency workflows for the same ref (always using latest version)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  orchestration:
    runs-on: ubuntu-latest                        # or self-hosted-runner
    outputs:
      tasks: ${{ steps.run.outputs.tasks }}
      run_id: ${{ steps.run.outputs.run_id }}
    steps:
      - name: Authentication + Get Tasks
        id: run
        uses: stack-spot/runtime-manager-action@v1
        with:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
          CLIENT_REALM: ${{ secrets.CLIENT_REALM }}
          WORKSPACE: my_workspace
          ENVIRONMENT: my_environment
          VERSION_TAG: my_tag
          TF_STATE_BUCKET_NAME: my_bucket
          TF_STATE_REGION: region
          IAC_BUCKET_NAME: my_bucket
          IAC_REGION: region
          VERBOSE: true                      # not mandatory
          BRANCH: main                       # not mandatory
          OPEN_API_PATH: swagger.yaml        # not mandatory

      - name: My customizable ORCHESTRATION step
        run: |
          echo "My customizable ORCHESTRATION operation"

  provision:
    runs-on: self-hosted-runner
    needs: [orchestration]
    strategy:
      matrix:
        task: ${{ fromJSON(needs.orchestration.outputs.tasks) }}
      fail-fast: true
      max-parallel: 1
    steps:
      - name: Job IAC
        if: contains( matrix.task.taskType , 'IAC')
        uses: stack-spot/runtime-iac-action@v1
        with:
          FEATURES_LEVEL_LOG: debug
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
          CLIENT_REALM: ${{ secrets.CLIENT_REALM }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: sa-east-1
          RUN_TASK_ID: ${{ matrix.task.runTaskId }}
          BASE_PATH_OUTPUT: path/to/save/file      # not mandatory

      - name: My customizable IAC step
        if: contains( matrix.task.taskType , 'IAC')
        run: |
          echo "My customizable ORCHESTRATION operation"

      - name: Job DEPLOY
        if: contains( matrix.task.taskType , 'DEPLOY')
        uses: stack-spot/runtime-deploy-action@v1
        with:
          FEATURES_LEVEL_LOG: debug
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
          CLIENT_REALM: ${{ secrets.CLIENT_REALM }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: sa-east-1
          REPOSITORY_NAME: my-repository-name 
          RUN_TASK_ID: ${{ matrix.task.runTaskId }
          FEATURES_TERRAFORM_MODULES: >-
           [
              {
                 "sourceType":"{source_type}",
                 "path":"{path}",        // Allow all that stast with path
                 "private": true|false,  // only support true with gitHttps
                 "app":"{app}",          // only if privite is true
                 "token":"{token}"       // only if privite is true
              }
           ]

      - name: My customizable DEPLOY step
        if: contains( matrix.task.taskType , 'DEPLOY')
        run: |
          echo "My customizable ORCHESTRATION operation"

      - name: Job DESTROY
        if: contains( matrix.task.taskType , 'DESTROY')
        uses: stack-spot/runtime-destroy-action@v1
        with:
          FEATURES_LEVEL_LOG: debug
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
          CLIENT_REALM: ${{ secrets.CLIENT_REALM }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: sa-east-1
          REPOSITORY_NAME: my-repository-name 
          RUN_TASK_ID: ${{ matrix.task.runTaskId }}
          FEATURES_TERRAFORM_MODULES: >-
           [
              {
                 "sourceType":"{source_type}",
                 "path":"{path}",        // Allow all that stast with path
                 "private": true|false,  // only support true with gitHttps
                 "app":"{app}",          // only if privite is true
                 "token":"{token}"       // only if privite is true
              }
           ]

      - name: My customizable DESTROY step
        if: contains( matrix.task.taskType , 'DESTROY')
        run: |
          echo "My customizable ORCHESTRATION operation"

  cancel-run:
    runs-on: ubuntu-latest
    needs: [orchestration, provision]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - name: Cancel run
        uses: stack-spot/runtime-cancel-run-action@v1
        if: ${{ needs.orchestration.outputs.run_id != '' }}
        with:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
          CLIENT_REALM: ${{ secrets.CLIENT_REALM }}
          RUN_ID: ${{ needs.orchestration.outputs.run_id }}
